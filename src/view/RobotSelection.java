package view;


import model.interview.Interview;
import model.robot.Robot;

import javax.swing.*;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

public class RobotSelection extends JDialog {
    private JPanel panel;
    private JComboBox[] comboxes;
    private JLabel[] lables;
    private JButton bestaetigenButton;

    private GridBagConstraints gbc = new GridBagConstraints();


    public RobotSelection(JFrame mainFrame, Interview interview) {
        setResizable(false);

        //Mittige Ausrichtugn
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        int dx = (ge.getCenterPoint().x - getSize().width / 2);
        int dy = (ge.getCenterPoint().y - getSize().height / 2);
        setLocation(dx, dy);

        comboxes = new JComboBox[interview.getAnzahlTeilnehmer()];
        lables = new JLabel[interview.getAnzahlTeilnehmer()];
        setPreferredSize(new Dimension(150, interview.getAnzahlTeilnehmer() * 75));

        int i = 0;
        for (String role : interview.getAllRoles()) {
            lables[i] = new JLabel(role);
            panel.add(lables[i]);
            comboxes[i] = new JComboBox();
            comboxes[i].setSize(new Dimension(100, 50));
            DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
            comboxes[i].setModel(defaultComboBoxModel1);
            for (Robot r : Robot.getRobotList()) {
                comboxes[i].addItem(r);
            }
            panel.add(comboxes[i]);
            i++;
        }

        bestaetigenButton = new JButton("Best√§tigen");
        panel.add(bestaetigenButton);

        bestaetigenButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                ArrayList<Robot> temp = new ArrayList<>();
                for (int i = 0; i < interview.getAnzahlTeilnehmer(); i++) {
                    for (Robot r : Robot.getRobotList()) {
                        if (comboxes[i].getSelectedItem().toString().equals(r.getName())) {
                            r.setRole(lables[i].getText());
                            temp.add(r);
                        }
                    }

                }
                new InterviewPlayer(mainFrame, interview, temp);
                setVisible(false);
            }
        });

        setContentPane(panel);
        setResizable(false);
        setVisible(true);
        pack();
        repaint();

    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }
}

