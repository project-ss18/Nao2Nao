package view;

import controller.AppProperties;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;

public class NewRobot extends JDialog implements Runnable {

    //------------------------Attribute------------------------\\
    private JTextField textFieldRobotName;
    private JTextField textFieldIP;
    private JButton bestätigenButton;
    private JPanel panel;

    //------------------------Variablen------------------------\\
    private Robotlist robotlist;
    private boolean autoLoad;
    private boolean bestaetigt;

    //-----------------------Konstruktor-----------------------\\
    NewRobot(Robotlist robotlist, boolean autoLoad) {

        setPreferredSize(new Dimension(200, 150));
        setSize(new Dimension(200, 150));
        getRootPane().setDefaultButton(bestätigenButton);
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        this.autoLoad = autoLoad;
        this.robotlist = robotlist;
        int dx = (ge.getCenterPoint().x - getSize().width / 2);
        int dy = (ge.getCenterPoint().y - getSize().height / 2);
        setLocation(dx, dy);

        bestaetigt = false;
        setContentPane(panel);
        pack();
        requestFocus();
        if (!autoLoad) setVisible(true);

        bestätigenButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                System.out.println("gedrückt");
                bestaetigt = true;
            }
        });
        textFieldIP.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (Character.isLetter(c) && !e.isAltDown()) {
                    e.consume();
                }
            }
        });
    }

    //-------------------------Methoden-------------------------\\
    @Override
    public void run() {
        if (autoLoad) {
            ArrayList<String> ipList = AppProperties.getPreSettedIPs();
            if (ipList.size() != 0) {
                for (String s : ipList) {
                    robotlist.setBackButton(false);
                    robotlist.addRobot("HFU_" + ipList.indexOf(s), s);
                    robotlist.setBackButton(true);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Keine vordefinierten IPs vorhanden!", "Fehler", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            System.out.println("waiting...");
            while (!bestaetigt) {
                System.out.print("");
            }
            System.out.println("Bestätigt!");
            robotlist.setBackButton(false);
            setVisible(false);
            robotlist.addRobot(textFieldRobotName.getText(), textFieldIP.getText());
            robotlist.setBackButton(true);

            Thread.currentThread().stop();

        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new GridBagLayout());
        final JLabel label1 = new JLabel();
        label1.setText("IP-Adresse:");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.EAST;
        panel.add(label1, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Robotername: ");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 0.7;
        gbc.anchor = GridBagConstraints.EAST;
        panel.add(label2, gbc);
        textFieldRobotName = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel.add(textFieldRobotName, gbc);
        textFieldIP = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel.add(textFieldIP, gbc);
        bestätigenButton = new JButton();
        bestätigenButton.setText("Bestätigen");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel.add(bestätigenButton, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }
}
